package mediformapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LoginAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoginAllPropertiesEquals(Login expected, Login actual) {
        assertLoginAutoGeneratedPropertiesEquals(expected, actual);
        assertLoginAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoginAllUpdatablePropertiesEquals(Login expected, Login actual) {
        assertLoginUpdatableFieldsEquals(expected, actual);
        assertLoginUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoginAutoGeneratedPropertiesEquals(Login expected, Login actual) {
        assertThat(expected)
            .as("Verify Login auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoginUpdatableFieldsEquals(Login expected, Login actual) {
        assertThat(expected)
            .as("Verify Login relevant properties")
            .satisfies(e -> assertThat(e.getUsername()).as("check username").isEqualTo(actual.getUsername()))
            .satisfies(e -> assertThat(e.getPassword()).as("check password").isEqualTo(actual.getPassword()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoginUpdatableRelationshipsEquals(Login expected, Login actual) {
        assertThat(expected)
            .as("Verify Login relationships")
            .satisfies(e -> assertThat(e.getParentID()).as("check parentID").isEqualTo(actual.getParentID()));
    }
}
